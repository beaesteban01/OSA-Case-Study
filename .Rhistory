hist(df_OSA$IAH, main= 'IAH Histogram', xlab = "IAH", col= color) #poison distribution, why? to measure nº of time somt happens but in regression we supose that distributions are gaussian
#solution--> coger el log (+1 por asegurar)
hist(log(df_OSA$IAH+1), main= 'log(IAH+1) Histogram', xlab = "IAH", col= color) #but why IAH is pisson distribution=? these type of question for data anaalysis
hist(df_OSA$Height, main= 'Height Histogram', xlab = "Height", col= color)
hist(df_OSA$Weight, main= 'Weight Histogram', xlab = "Weight", col= color)
hist(df_OSA$Cervical, main= 'Cervical Histogram', xlab = "Cervical", col= color)
hist(df_OSA$Age, main= 'Age Histogram', xlab = "Age", col= color)
hist(df_OSA_feat2$BMI, main= 'BMI Histogram', xlab = "BMI", col= color)
par(mfrow=c(1,2))
hist(df_OSA$Height[df_OSA$Gender==1], main= 'Male Height Histogram', xlab = "Height", col= color)
hist(df_OSA$Height[df_OSA$Gender==2], main= 'Female Height Histogram', xlab = "Height", col= color)
hist(df_OSA$IAH[df_OSA$Gender==1], main= 'Male IAH Histogram', xlab = "IAH", col= color)
hist(df_OSA$IAH[df_OSA$Gender==2], main= 'Female IAH Histogram', xlab = "IAH", col= color)
hist(log(df_OSA$IAH+1)[df_OSA$Gender==1], main= 'Male log(IAH+1) Histogram', xlab = "IAH", col= color)
hist(log(df_OSA$IAH+1)[df_OSA$Gender==2], main= 'Female log(IAH+1) Histogram', xlab = "IAH", col= color)
# See relations between variables
attach(df_OSA)
pairs(~ IAH + Gender + Weight + Height + Cervical + Age + Smoker + Snorer)
# FIRST
# install corrplot and then load it
library(corrplot)
df_OSA_C=df_OSA
#df_OSA_C$Gender = as.numeric(df_OSA_C$Gender)
#patient no lo usa para nada
M <- cor(subset(df_OSA_C, select = -Patient))
corrplot(M, method="number")
corrplot(M, method="circle", col=greenDegradado, tl.col = "black")
par(mfrow=c(1,1))
# Delete smoker and snorer
df_OSA_feat1 <- select(df_OSA_C,- Smoker, -Snorer)
str(df_OSA_feat1)
# Creation of new column
df_OSA_feat2 <- mutate(df_OSA_feat1, BMI = ((Weight)/(Height*10^-2)^2))
str(df_OSA_feat2)
attach(df_OSA_feat2)
M <- cor(subset(df_OSA_feat2, select = -Patient))
lm.fit1=lm(IAH~Weight+Cervical)
summary(lm.fit1)
#MULTIPLE 2- weigh and cervical and BMI
#attach(df_OSA_feat2)
#M <- cor(subset(df_OSA_feat2, select = -Patient))
lm.fit2=lm(IAH~Weight+Cervical+BMI)
summary(lm.fit2)
M <- cor(subset(df_OSA_feat2, select = -Patient))
corrplot(M, method="number")
plot(lm.fit1)
plot(lm.fit4)
#MULTIPLE 4  Todo - Gender
lm.fit4=lm(IAH~Weight+Cervical+Height+Age +BMI)
summary(lm.fit4)
#MULTIPLE 5 todo - Gender -BMI
lm.fit5=lm(IAH~Weight+Cervical+Height+Age)
summary(lm.fit5)
#MULTIPLE 6 todo - bmi sin heigh and weight
lm.fit6=lm(IAH~Cervical+BMI+Age)
summary(lm.fit6)
plot(lm.fit6)
plot(lm.fit2)
plot(lm.fit3)
lm.fit3=lm(IAH~Weight+Height+Cervical+Age+Gender+BMI)
plot(lm.fit3)
plot(lm.fit4)
plot(lm.fit5)
plot(lm.fit6)
par(mfrow=c(3,2))
plot(lm.fit1)
plot(lm.fit2)
par(mfrow=c(1,1))
plot(lm.fit1)
plot(lm.fit1, main = 'Multiple R. 1')
plot(lm.fit1, main = 'Multiple Regression 1')
plot(lm.fit2, main = 'Multiple Regression 2')
plot(lm.fit3, main = 'Multiple Regression 3')
plot(lm.fit4, main = 'Multiple Regression 4')
plot(lm.fit5, main = 'Multiple Regression 5')
plot(lm.fit6, main = 'Multiple Regression 6')
# Using readxl package to read an Excel file
# Install the readxl package is nor already installed
library(readxl) # Using readxl package to read an Excel file
Input_file <- "OSA_DB_UPM.xlsx"
Output_file <- "OSA_extreme_male.xlsx"
Data_Directory <- "/Users/beatrizesteban/OneDrive - Universidad Politécnica de Madrid/Segundo MUIT/PRDL&MLLB/OSA/DATA/"
# Using readxl package to read an Excel file
# Install the readxl package is nor already installed
library(readxl) # Using readxl package to read an Excel file
library(naniar)
library(dplyr) # asi importamos librerias --> tipo import en python
library(visdat) #visualize
library(tidyr)
library(writexl)
df_OSA <- read_excel(paste(Data_Directory, Input_file, sep = ""))
df_OSA = as.data.frame(df_OSA)
names(df_OSA)
dim(df_OSA)
df_OSA_male = subset(df_OSA, Gender=="hombre")
Input_file <- "OSA_DB_UPM.xlsx"
Output_file <- "OSA_extreme_male.xlsx"
Data_Directory <- "/Users/beatrizesteban/OneDrive - Universidad Politécnica de Madrid/Segundo MUIT/PRDL&MLLB/OSA/DATA/"
# Using readxl package to read an Excel file
# Install the readxl package is nor already installed
library(readxl) # Using readxl package to read an Excel file
library(naniar)
library(dplyr) # asi importamos librerias --> tipo import en python
library(visdat) #visualize
library(tidyr)
library(writexl)
df_OSA <- read_excel(paste(Data_Directory, Input_file, sep = ""))
df_OSA = as.data.frame(df_OSA)
names(df_OSA)
dim(df_OSA)
df_OSA_male = subset(df_OSA, Gender=="hombre")
View(df_OSA_male)
View(df_OSA_male)
View(df_OSA)
df_OSA_male = subset(df_OSA, Gender==1)
View(df_OSA_male)
df_OSA_male2 <- df_OSA_male %>%>
mutate(OSA = ifelse(IAH<=10, "Healthy", IAH>=30, "Severe", "Mild")))
df_OSA_male2 <- df_OSA_male %>%>
mutate(OSA = ifelse(IAH<=10, "Healthy", IAH>=30, "Severe", "Mild"))
df_OSA_male2 <- df_OSA_male %>%>
mutate(OSA = ifelse(IAH<=10, "Healthy", ifelse(IAH>=30, "Severe", "Mild")))
df_OSA_male2 <- df_OSA_male %>%>
mutate(OSA = ifelse(IAH<=10, "Healthy",
ifelse(IAH>=30, "Severe", "Mild")))
df_OSA_male <- df_OSA_male %>%>
mutate(OSA = ifelse(IAH<=10, "Healthy",
ifelse(IAH>=30, "Severe", "Mild")))
View(df_OSA)
df_OSA_male <- df_OSA_male %>%>
mutate(OSA = ifelse(IAH<=10, "Healthy",
ifelse(IAH>=30, "Severe", "Mild")))
df_OSA_male2 <- df_OSA_male %>%>
mutate(df_OSA_maleOSA = ifelse(IAH<=10, "Healthy",
ifelse(IAH>=30, "Severe", "Mild")))
df_OSA_male2 <- df_OSA_male %>%>
mutate(df_OSA_male, OSA = ifelse(IAH<=10, "Healthy",
ifelse(IAH>=30, "Severe", "Mild")))
View(df_OSA_male)
df_OSA_male2 <- df_OSA_male %>%>
mutate(OSA = ifelse(IAH<=10, "Healthy",
ifelse(IAH>=30, "Severe", "Mild")))
library(dplyr) # asi importamos librerias --> tipo import en python
df_OSA_male2 <- df_OSA_male %>%>
mutate(OSA = ifelse(IAH<=10, "Healthy",
ifelse(IAH>=30, "Severe", "Mild")))
df_OSA_male2 <- df_OSA_male %>%
mutate(OSA = ifelse(IAH<=10, "Healthy",
ifelse(IAH>=30, "Severe", "Mild")))
#filtrar los mild y quedarnos con severe y healthy
df_OSA_male3 <- filter(df_OSA_male2$OSA=="Mild")
write_xlsx(df_OSA_male2,
paste(Data_Directory, Output_file, sep = ""))
rm(list=ls())
Input_file <- "OSA_extreme_male.xlsx"
Data_Directory <- "/Users/beatrizesteban/OneDrive - Universidad Politécnica de Madrid/Segundo MUIT/PRDL&MLLB/OSA/DATA/"
library(readxl)
df_OSA_male <- read_excel(paste(Data_Directory, Input_file, sep = ""))
View(df_OSA_male)
rm(list=ls())
Input_file <- "OSA_DB_UPM.xlsx"
Output_file <- "OSA_extreme_male.xlsx"
Data_Directory <- "/Users/beatrizesteban/OneDrive - Universidad Politécnica de Madrid/Segundo MUIT/PRDL&MLLB/OSA/DATA/"
library(readxl)
df_OSA <- read_excel(paste(Data_Directory, Input_file, sep = ""))
df_OSA = as.data.frame(df_OSA)
names(df_OSA)
dim(df_OSA)
## We will begin considering male subjets
### Male population
df_OSA_male=subset(df_OSA, Gender=="hombre")
# We will use dplyr library (mutate operator)
library(dplyr)
df_OSA_male <- df_OSA_male %>%
mutate(OSA = ifelse(IAH <= 10, "Healthy",
ifelse(IAH>=30, "Severe", "Mild")))
df_OSA_male <- df_OSA_male %>% filter(OSA != "Mild")
df_OSA_male$OSA = factor(df_OSA_male$OSA)
# Add BMI column
df_OSA_male$BMI <-
with(df_OSA_male, Weight / (Height/100.0)^2)
summary(df_OSA_male)
df_OSA_male %>% group_by(OSA) %>% summarise(Ave_IAH = mean(IAH))
library(writexl)
write_xlsx(df_OSA_male,
paste(Data_Directory, Output_file, sep = ""))
rm(list=ls())
Input_file <- "OSA_extreme_male.xlsx"
Data_Directory <- "/Users/beatrizesteban/OneDrive - Universidad Politécnica de Madrid/Segundo MUIT/PRDL&MLLB/OSA/DATA/"
library(readxl)
df_OSA_male <- read_excel(paste(Data_Directory, Input_file, sep = ""))
summary(df_OSA_male)
# Define OSA column as a factor for being used be
# classification models
df_OSA_male$OSA = factor(df_OSA_male$OSA)
cor(df_OSA_male[,3:7])
# for examle a visualization
library(corrplot)
correlations = cor(df_OSA_male[,3:7])
corrplot(correlations, method="number")
# set the plotting area into a 1*2 array
par(mfrow=c(1,2))
hist(subset(df_OSA_male, OSA=="Healthy")$IAH)
Input_file <- "OSA_DB_UPM.xlsx"
Data_Directory <- "/Users/beatrizesteban/OneDrive - Universidad Politécnica de Madrid/Segundo MUIT/PRDL&MLLB/OSA/DATA/"
# Using readxl package to read an Excel file
# Install the readxl package is nor already installed
library(readxl) # Using readxl package to read an Excel file
library(naniar)
library(dplyr) # asi importamos librerias --> tipo import en python
library(visdat) #visualize
library(tidyr)
library(writexl)
df_OSA <- read_excel(paste(Data_Directory, Input_file, sep = ""))
df_OSA = as.data.frame(df_OSA)
names(df_OSA)
dim(df_OSA)
# COLORS
library("RColorBrewer")
color <- brewer.pal(7, "Set3")
greenDegradado <- brewer.pal(7, "Greens")
# See relations between variables
attach(df_OSA)
pairs(~ IAH + Gender + Weight + Height + Cervical + Age + Smoker + Snorer)
# FIRST
# install corrplot and then load it
library(corrplot)
df_OSA_C=df_OSA
#df_OSA_C$Gender = as.numeric(df_OSA_C$Gender)
#patient no lo usa para nada
M <- cor(subset(df_OSA_C, select = -Patient))
corrplot(M, method="number")
df_OSA <- read_excel(paste(Data_Directory, Input_file, sep = ""))
# Clear the working space
rm(list=ls())
library(readxl) # Using readxl package to read an Excel file
library(writexl) # write excelfile
library(dplyr) # To work with datasets, basic library
library(tidyr) # easy to clean the daata an dowrk with. Each column is a variable and each row and obs
library(visdat) #visualize
library("RColorBrewer") #For colors
library(naniar) # for missing data
# Write the clean data into Output_file
# you can install writexl package
library(corrplot) # correlation plots
# Clear the working space
rm(list=ls())
library(readxl) # Using readxl package to read an Excel file
library(writexl) # write excelfile
library(dplyr) # To work with datasets, basic library
library(tidyr) # easy to clean the daata an dowrk with. Each column is a variable and each row and obs
library(visdat) #visualize
library("RColorBrewer") #For colors
library(naniar) # for missing data
Input_file <- "Info_BDApnea_QuironMalaga.xlsx"
Output_file <- "OSA_DB_UPM.xlsx"
Data_Directory <- "/Users/beatrizesteban/OneDrive - Universidad Politécnica de Madrid/Segundo MUIT/PRDL&MLLB/OSA/DATA/"
# paste --> concatenation of to strings
df_tmp <- read_excel(paste(Data_Directory, Input_file, sep = ""))
typeof(df_tmp)
is.data.frame(df_tmp)
### NOTE: ##############################################
# df_tmp is NOT only a data frame!
# use as.data.frame to avoid later problems
class(df_tmp)
df_tmp = as.data.frame(df_tmp)
class(df_tmp)
df_tmp1 <- select(df_tmp, Patient, Gender, IAH, Peso, Talla, Edad, PerCervical, Fumador, Roncador)
df_tmp1 <- select(df_tmp1, Patient, Gender, IAH, Peso, Talla, Edad, PerCervical, Fumador, Roncador, Enfermedades)
df_tmp1 <- select(df_tmp, Patient, Gender, IAH, Peso, Talla, Edad, PerCervical, Fumador, Roncador, Enfermedades)
df_tmp1 <- df_tmp1 %>% rename(Weight = Peso,
Height = Talla,
Age = Edad,
Cervical = PerCervical,
Smoker = Fumador,
Snorer = Roncador,
Enfermedades = Illness)
df_tmp1 <- df_tmp1 %>% rename(Weight = Peso,
Height = Talla,
Age = Edad,
Cervical = PerCervical,
Smoker = Fumador,
Snorer = Roncador,
Illness = Enfermedades)
# EXPLORATORY DATA ANALYSIS
# See what kind of data we have in the df
vis_dat(df_tmp1)
str(df_tmp1)
barplot(table(df_tmp1$Illness), ylim = c(0,550), main= "Genders", col=color)
color <- brewer.pal(7, "Set3")
length(unique(df_tmp1$Illness)) # 2 diff. values
barplot(table(df_tmp1$Illness), ylim = c(0,550), main= "Genders", col=color)
names(unique(df_tmp1$Gender))
table <- table(df_tmp1$Gender)
names(table)
table <- table(df_tmp1$Illness)
names(table)
names(unique(table))
unique(names(table))
table2 <- table  %>% table(unique(df_tmp1$Illness)
table2 <- table  %>% table(unique(df_tmp1$Illness))
names(unique(table))
count(names())
count(names
count(names)
count(names(table))
count(unique(names(table)))
table2 <- table  %>% (unique(df_tmp1$Illness))
table2 <- table  %>% unique(df_tmp1$Illness))
table2 <- table  %>% unique(df_tmp1$Illness)
names(table2)
count(df_tmp1, unique(df_tmp1$Illness)
count(df_tmp1, unique(df_tmp1$Illness))
count(table)
count(df_tmp1, (df_tmp1$Illness))
df_prubea <- df_tmp1
df_2 <- df_prubea %<% str_replace(x,( df_prubea$Illness!='no' && df_prubea$Illness!='NA'), 'si')
df_2 <- df_prubea %>% str_replace(x,( df_prubea$Illness!='no' && df_prubea$Illness!='NA'), 'si')
library(stringr)
df_2 <- df_prubea %>% str_replace(x,( df_prubea$Illness!='no' && df_prubea$Illness!='NA'), 'si')
df_2 <- df_prubea %>% str_replace(x,( df_prubea$Illness!='no' && df_prubea$Illness!='NA'), si)
df_2 <- df_prubea %>% str_replace(x,( df_prubea$Illness!="no" && df_prubea$Illness!="NA"), "si")
df_2 <- df_prubea %>% str_replace(x,df_prubea$Illness!="no", "si")
df_2 <- df_prubea %>% str_replace(df_prubea,( df_prubea$Illness!='no' && df_prubea$Illness!='NA'), 'si')
df_2 <- df_prubea %>% str_replace(df_prubea,( df_prubea$Illness!='no' && df_prubea$Illness!='NA'), 'si')
df_2 <- df_prubea %>% str_replace(df_prubea, df_prubea$Illness!='no', 'si')
df_2 <- str_replace(df_prubea, df_prubea$Illness!='no', 'si')
str_replace(df_prubea, df_prubea$Illness!='no', 'si')
View(df_prubea)
str_replace(df_prubea$Illness, df_prubea$Illness!='no', 'si')
str_replace(table, table!='no', 'si')
sapply(df_prubea, str_replace(df_prubea, df_prubea$Illness!='no', 'si')
sapply(df_prubea, str_replace(df_prubea, df_prubea$Illness!='no', 'si'))
attach(df_prubea)
sapply(Illness, str_replace(Illness, Illness!="no", "si"))
length(unique(df_tmp1$Illness)) # 2 diff. values
barplot(table(df_tmp1$Illness), ylim = c(0,550), main= "Illness", col=color)
count(df_tmp1, (df_tmp1$Illness)) #saca ya los valores unicos
library(readxl) # Using readxl package to read an Excel file
library(writexl) # write excelfile
library(dplyr) # To work with datasets, basic library
library(tidyr) # easy to clean the daata an dowrk with. Each column is a variable and each row and obs
library(visdat) #visualize
library("RColorBrewer") #For colors
library(naniar) # for missing data
Input_file <- "Info_BDApnea_QuironMalaga.xlsx"
Output_file <- "OSA_DB_UPM.xlsx"
Data_Directory <- "/Users/beatrizesteban/OneDrive - Universidad Politécnica de Madrid/Segundo MUIT/PRDL&MLLB/OSA/DATA/"
# paste --> concatenation of to strings
df_tmp <- read_excel(paste(Data_Directory, Input_file, sep = ""))
typeof(df_tmp)
is.data.frame(df_tmp)
### NOTE: ##############################################
# df_tmp is NOT only a data frame!
# use as.data.frame to avoid later problems
class(df_tmp)
df_tmp = as.data.frame(df_tmp)
class(df_tmp)
df_tmp1 <- select(df_tmp, Patient, Gender, IAH, Peso, Talla, Edad, PerCervical, Fumador, Roncador)
df_tmp1 <- select(df_tmp, Patient, Gender, IAH, Peso, Talla, Edad, PerCervical, Fumador, Roncador, Enfermedades)
df_tmp1 <- df_tmp1 %>% rename(Weight = Peso,
Height = Talla,
Age = Edad,
Cervical = PerCervical,
Smoker = Fumador,
Snorer = Roncador,
Illness = Enfermedades)
# EXPLORATORY DATA ANALYSIS
# See what kind of data we have in the df
vis_dat(df_tmp1)
str(df_tmp1)
color <- brewer.pal(7, "Set3")
length(unique(df_tmp1$Illness)) # 2 diff. values
barplot(table(df_tmp1$Illness), ylim = c(0,550), main= "Illness", col=color)
count(df_tmp1, (df_tmp1$Illness)) #saca ya los valores unicos
length(unique(df_tmp1$Gender)) # 2 diff. values
barplot(table(df_tmp1$Gender), ylim = c(0,550), main= "Genders", col=color)
illnessTable <- table(df_tmp1$Illness)
illnessTable
View(df_tmp1)
which(df_tmp1$Illness != no)
which(df_tmp1$Illness != "no")
which(df_tmp1$Illness != "no" & df_tmp1$Illness != "NA")
count(df_tmp1, (df_tmp1$Illness)) #saca ya los valores unicos
which(df_tmp1$Illness != "no" & df_tmp1$Illness != "<NA>")
which((df_tmp1$Illness != "no") & (df_tmp1$Illness != "<NA>"))
which(df_tmp1$Illness = "no")
which(df_tmp1$Illness == "no")
which(df_tmp1$Illness == "no")
which(df_tmp1$Illness == "<NA>")
which(df_tmp1$Illness == NA)
which(df_tmp1$Illness == NaN)
which(df_tmp1$Illness == "")
which(df_tmp1$Illness == " ")
which(df_tmp1$Illness != "no")
df_tmp1$Illness[which(df_tmp1$Illness != "no")] <- "si"
count(df_tmp1, (df_tmp1$Illness)) #saca ya los valores unicos
length(unique(df_tmp1$Gender)) # 2 diff. values
count(df_tmp1,df_tmp1$Gender)
barplot(count(df_tmp1,df_tmp1$Gender))
count(df_tmp1,df_tmp1$Smoker)
count(df_tmp1,df_tmp1$Snorer)
# EXPLORATORY DATA ANALYSIS
# See what kind of data we have in the df
vis_dat(df_tmp1)
str(df_tmp1)
length(unique(df_tmp1$Snorer)) # 8 diff. values
# Factor and numeric conversion
par(mfrow=c(1,2))
df_tmp1$Gender = factor(df_tmp1$Gender)
str(df_tmp1$Gender)
barplot(table(df_tmp1$Gender))
df_tmp1$Gender = as.numeric(df_tmp1$Gender)
barplot(table(df_tmp1$Gender))
count(df_tmp1,df_tmp1$Gender)
barplot(table(df_tmp1$Illness), ylim = c(0,550), main= "Illness", col=color)
length(unique(df_tmp1$Illness))
library(readxl) # Using readxl package to read an Excel file
library(writexl) # write excelfile
library(dplyr) # To work with datasets, basic library
library(tidyr) # easy to clean the daata an dowrk with. Each column is a variable and each row and obs
library(visdat) #visualize
library("RColorBrewer") #For colors
library(naniar) # for missing data
Input_file <- "Info_BDApnea_QuironMalaga.xlsx"
Output_file <- "OSA_DB_UPM.xlsx"
Data_Directory <- "/Users/beatrizesteban/OneDrive - Universidad Politécnica de Madrid/Segundo MUIT/PRDL&MLLB/OSA/DATA/"
# paste --> concatenation of to strings
df_tmp <- read_excel(paste(Data_Directory, Input_file, sep = ""))
typeof(df_tmp)
is.data.frame(df_tmp)
### NOTE: ##############################################
# df_tmp is NOT only a data frame!
# use as.data.frame to avoid later problems
class(df_tmp)
df_tmp = as.data.frame(df_tmp)
class(df_tmp)
df_tmp1 <- select(df_tmp, Patient, Gender, IAH, Peso, Talla, Edad, PerCervical, Fumador, Roncador)
df_tmp1 <- select(df_tmp, Patient, Gender, IAH, Peso, Talla, Edad, PerCervical, Fumador, Roncador, Enfermedades)
df_tmp1 <- df_tmp1 %>% rename(Weight = Peso,
Height = Talla,
Age = Edad,
Cervical = PerCervical,
Smoker = Fumador,
Snorer = Roncador,
Illness = Enfermedades)
# EXPLORATORY DATA ANALYSIS
# See what kind of data we have in the df
vis_dat(df_tmp1)
str(df_tmp1)
color <- brewer.pal(7, "Set3")
barplot(table(df_tmp1$Illness), ylim = c(0,550), main= "Illness", col=color)
count(df_tmp1, (df_tmp1$Illness))
length(unique(df_tmp1$Illness))
length(unique(df_tmp1$Illness))
length(unique(df_tmp1$Gender))
count(df_tmp1,df_tmp1$Gender)
length(unique(df_tmp1$Smoker))
count(df_tmp1,df_tmp1$Smoker)
length(unique(df_tmp1$Snorer))
count(df_tmp1,df_tmp1$Snorer)
length(unique(df_tmp1$Patient)) # 684 diff. values
length(unique(df_tmp1$Weight)) # 92 diff. values
# Transformation of illness into si-no
df_tmp1$Illness[which(df_tmp1$Illness != "no")] <- "si"
count(df_tmp1,df_tmp1$Illness)
par(mfrow=c(1,1))
par(mfrow=c(1,2))
df_tmp1$Gender = factor(df_tmp1$Gender)
par(mfrow=c(1,1))
par(mfrow=c(1,2))
df_tmp1$Illness = factor(df_tmp1$Illness)
str(df_tmp1$Illness)
barplot(table(df_tmp1$Illness))
df_tmp1$Illness = as.numeric(df_tmp1$Illness)
barplot(table(df_tmp1$Illness))
vis_dat(df_tmp1)
# Factor and numeric conversion
par(mfrow=c(1,2))
df_tmp1$Gender = factor(df_tmp1$Gender)
str(df_tmp1$Gender)
barplot(table(df_tmp1$Gender))
df_tmp1$Gender = as.numeric(df_tmp1$Gender)
barplot(table(df_tmp1$Gender))
par(mfrow=c(1,1))
par(mfrow=c(1,2))
df_tmp1$Smoker = factor(df_tmp1$Smoker)
str(df_tmp1$Smoker)
barplot(table(df_tmp1$Smoker))
df_tmp1$Smoker = as.numeric(df_tmp1$Smoker)
barplot(table(df_tmp1$Smoker))
par(mfrow=c(1,1))
par(mfrow=c(1,2))
df_tmp1$Illness = factor(df_tmp1$Illness)
str(df_tmp1$Illness)
barplot(table(df_tmp1$Illness))
df_tmp1$Illness = as.numeric(df_tmp1$Illness)
barplot(table(df_tmp1$Illness))
par(mfrow=c(1,1))
par(mfrow=c(1,2))
df_tmp1$Snorer = factor(df_tmp1$Snorer)
summary(df_tmp1$Snorer)
barplot(table(df_tmp1$Snorer))
df_tmp1$Snorer= as.numeric(df_tmp1$Snorer)
barplot(table(df_tmp1$Snorer))
# Numeric conversion
# String values replace with NA
df_tmp1$Weight = as.numeric(df_tmp1$Weight)
vis_dat(df_tmp1)
# Now change -1 values for NA in all columns (i.e. variables)
df_tmp2 <- replace_with_na_all(df_tmp1,condition = ~.x == -1)
vis_dat(df_tmp2)
