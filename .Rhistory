table(df_tmp1$Snorer)
names(table(df_tmp1$Snorer))
par(mfrow=c(1,2))
barplot(table(df_tmp1$Snorer), ylim = c(0,550),main= "Snorer", col=color)
tabeldf_tmp1$Snorer= as.numeric(df_tmp1$Snorer)
df_tmp1$Snorer= as.numeric(df_tmp1$Snorer)
barplot(table(df_tmp1$Snorer), ylim = c(0,550),main= "Snorer", col=color)
barplot(table(df_tmp1$Snorer), ylim = c(0,550), xlim= 8, main= "Snorer", col=color)
barplot(table(df_tmp1$Snorer), ylim = c(0,550), xlim= c(0,8), main= "Snorer", col=color)
names(table(df_tmp1$Snorer))
table(df_tmp1$Snorer)
str(df_tmp1)
str(df_tmp1$Smoker)
summary(df_tmp1$Smoker)
df_tmp1$Smoker = as.numeric(df_tmp1$Smoker)
summary(df_tmp1$Smoker)
str(df_tmp1$Smoker)
barplot(table(df_tmp1$Smoker))
# Clear the working space
rm(list=ls())
library(readxl) # Using readxl package to read an Excel file
library(naniar)
library(dplyr) # asi importamos librerias --> tipo import en python
library(visdat) #visualize
library(tidyr)
library(writexl)
library("RColorBrewer") #For colors
Input_file <- "Info_BDApnea_QuironMalaga.xlsx"
Output_file <- "OSA_DB_UPM.xlsx"
Data_Directory <- "/Users/beatrizesteban/OneDrive - Universidad Politeﾌ…nica de Madrid/Segundo MUIT/PRDL&MLLB/OSA/DATA/"
# paste --> concatenation of to strings
df_tmp <- read_excel(paste(Data_Directory, Input_file, sep = ""))
typeof(df_tmp)
is.data.frame(df_tmp)
### NOTE: ##############################################
# df_tmp is NOT only a data frame!
# use as.data.frame to avoid later problems
class(df_tmp)
df_tmp = as.data.frame(df_tmp)
class(df_tmp)
df_tmp1 <- select(df_tmp, Patient, Gender, IAH, Peso, Talla, Edad, PerCervical, Fumador, Roncador)
df_tmp1 <- df_tmp1 %>% rename(Weight = Peso,
Height = Talla,
Age = Edad,
Cervical = PerCervical,
Smoker = Fumador,
Snorer = Roncador)
# EXPLORATORY DATA ANALYSIS
# See what kind of data we have in the df
vis_dat(df_tmp1)
str(df_tmp1)
color <- brewer.pal(7, "Set3")
length(unique(df_tmp1$Gender)) # 2 diff. values
# Factor and numeric conversion
df_tmp1$Gender = factor(df_tmp1$Gender)
par(dfrow=c(1,2))
par(mfrow=c(1,2))
barplot(table(df_tmp1$Snorer))
df_tmp1$Smoker = factor(df_tmp1$Smoker)
barplot(table(df_tmp1$Smoker))
df_tmp1$Smoker = as.numeric(df_tmp1$Smoker)
barplot(table(df_tmp1$Smoker))
#plot(table(df_tmp1$Smoker))
par(mfrow=c(1,1))
par(mfrow=c(1,2))
df_tmp1$Snorer = factor(df_tmp1$Snorer)
barplot(table(df_tmp1$Snorer))
df_tmp1$Snorer= as.numeric(df_tmp1$Snorer)
barplot(table(df_tmp1$Snorer))
# Clear the working space
rm(list=ls())
library(readxl) # Using readxl package to read an Excel file
library(naniar)
library(dplyr) # asi importamos librerias --> tipo import en python
library(visdat) #visualize
library(tidyr)
library(writexl)
library("RColorBrewer") #For colors
Input_file <- "Info_BDApnea_QuironMalaga.xlsx"
Output_file <- "OSA_DB_UPM.xlsx"
Data_Directory <- "/Users/beatrizesteban/OneDrive - Universidad Politeﾌ…nica de Madrid/Segundo MUIT/PRDL&MLLB/OSA/DATA/"
# paste --> concatenation of to strings
df_tmp <- read_excel(paste(Data_Directory, Input_file, sep = ""))
typeof(df_tmp)
is.data.frame(df_tmp)
### NOTE: ##############################################
# df_tmp is NOT only a data frame!
# use as.data.frame to avoid later problems
class(df_tmp)
df_tmp = as.data.frame(df_tmp)
class(df_tmp)
df_tmp1 <- select(df_tmp, Patient, Gender, IAH, Peso, Talla, Edad, PerCervical, Fumador, Roncador)
df_tmp1 <- df_tmp1 %>% rename(Weight = Peso,
Height = Talla,
Age = Edad,
Cervical = PerCervical,
Smoker = Fumador,
Snorer = Roncador)
# Factor and numeric conversion
par(mfrow=c(1,2))
df_tmp1$Gender = factor(df_tmp1$Gender)
str(df_tmp1$Gender)
barplot(table(df_tmp1$Gender))
df_tmp1$Gender = as.numeric(df_tmp1$Gender)
barplot(table(df_tmp1$Gender))
par(mfrow=c(1,1))
par(mfrow=c(1,2))
df_tmp1$Smoker = factor(df_tmp1$Smoker)
str(df_tmp1$Smoker)
summary(df_tmp1$Smoker)
barplot(table(df_tmp1$Smoker))
df_tmp1$Smoker = as.numeric(df_tmp1$Smoker)
barplot(table(df_tmp1$Smoker))
par(mfrow=c(1,1))
par(mfrow=c(1,2))
df_tmp1$Snorer = factor(df_tmp1$Snorer)
summary(df_tmp1$Snorer)
barplot(table(df_tmp1$Snorer))
df_tmp1$Snorer= as.numeric(df_tmp1$Snorer)
barplot(table(df_tmp1$Snorer))
# Numeric conversion
# String values replace with NA
df_tmp1$Weight = as.numeric(df_tmp1$Weight)
vis_dat(df_tmp1)
# Now change -1 values for NA in all columns (i.e. variables)
df_tmp2 <- replace_with_na_all(df_tmp1,condition = ~.x == -1)
vis_dat(df_tmp2)
df_final <- df_tmp2 %>% drop_na()
vis_dat(df_final)
str(df_final) #REcompruebo que menos patient y gender es numeric
write_xlsx(df_final,
paste(Data_Directory, Output_file, sep = ""))
vis_dat(df_tmp2)
# Now change -1 values for NA in all columns (i.e. variables)
df_tmp2 <- replace_with_na_all(df_tmp1,condition = ~.x == -1)
str(df_final) #REcompruebo que menos patient y gender es numeric
## 30 sept
# simple variable: cervical and IAH
lm.fit= lm(IAH ~ Cervical)
plot(Cervical, IAH)
par(mfrow=c(!,1))
par(mfrow=c(1,1))
plot(Cervical, IAH)
abline(lm.fit)
summary(lm.fit)
lm.fit=lm(IAH~Weight+Height+Cervical+Age+Gender)
# think what happends qehn adding a categorical variable (gender) --> algo mal
# ver pptx ej pg 64
summary(lm.fit)
lm.fit= lm(Weight ~ Cervical)
plot(Weight, IAH)
abline(lm.fit)
summary(lm.fit)
lm.fit= lm(Weight ~ Cervical)
plot(Cervical, Weigth)
plot(Cervical, Weight)
abline(lm.fit)
summary(lm.fit)
lm.fit= lm(Weight ~ IAH)
plot(IAH, Weight)
abline(lm.fit)
lm.fit= lm(Cervical ~ Cervical)
plot(Cervical, Cervical)
lm.fit= lm(Weight ~ Cervical)
plot(Cervical, Weight)
abline(lm.fit)
summary(lm.fit)
lm.fit= lm(Weight ~ IAH)
plot(IAH, Weight)
abline(lm.fit)
summary(lm.fit)
summary(lm.fit)
## 30 sept
# simple variable: cervical and IAH
lm.fit= lm(IAH ~ Cervical)
plot(Cervical, IAH)
abline(lm.fit)
summary(lm.fit)
lm.fit= lm(Weight ~ IAH)
plot(IAH, Weight)
abline(lm.fit)
summary(lm.fit)
lm.fit=lm(IAH~Weight+Height+Cervical+Age+Gender)
# think what happends qehn adding a categorical variable (gender) --> algo mal
# ver pptx ej pg 64
summary(lm.fit)
# think what happends qehn adding a categorical variable (gender) --> algo mal
# ver pptx ej pg 64
plot(IAH~Weight+Height+Cervical+Age+Gender)
# make predictions#
predIAH <- predict(lm.fit, df_OSA[c('Weight', 'Height', 'Cervical', 'Age', 'Gender')])
# %>% para aplicar una operacion sobre el df
dfP <- select(df_tmp, Patient, Gender, IAH, Peso, Talla, Edad, PerCervical, Fumador, Roncador)
dfP <- df_tmp1 %>% rename(Weight = Peso,
Height = Talla,
Age = Edad,
Cervical = PerCervical,
Smoker = Fumador,
Snorer = Roncador)
dfP <- dfP %>% rename(Weight = Peso,
Height = Talla,
Age = Edad,
Cervical = PerCervical,
Smoker = Fumador,
Snorer = Roncador)
# %>% para aplicar una operacion sobre el df
dfP <- select(df_tmp, Patient, Gender, IAH, Peso, Talla, Edad, PerCervical, Fumador, Roncador)
dfP <- dfP %>% rename(Weight = Peso,
Height = Talla,
Age = Edad,
Cervical = PerCervical,
Smoker = Fumador,
Snorer = Roncador)
View(dfP)
# %>% para aplicar una operacion sobre el df
dfP <- df_tmp2
View(dfP)
# %>% para aplicar una operacion sobre el df
dfPr <- df_tmp2
View(dfPr)
# %>% para aplicar una operacion sobre el df
dfPru <- df_final
View(dfPru)
attach(dfPru)
mutate(Age, ICM= Weight/(Height)^2)
mutate(Age, ICM= Weight/(Height)^2)
mutate(is.double(Age), ICM= Weight/(Height)^2)
str(dfPru)
mutate(is.double(Age), ICM= is.double(Weight)/(is.double(Height))^2)
mutate(iis.integer(Age), ICM= Weight/(Height)^2)
mutate(is.integer(Age), ICM= Weight/(Height)^2)
mutate(is.integer(Age), ICM= is.integer(Weight)/(is.integer(Height))^2)
mutate(is.integer(Age), is.integer(ICM) = is.integer(Weight)/(is.integer(Height))^2)
mutate(is.integer(Age), ICM = is.integer(Weight)/(is.integer(Height))^2)
mutate(Age, ICM= Weight/(Height*Height)
mutate(Age, ICM= Weight/(Height*Height))
mutate(is.numeric(Age), ICM= Weight/(Height*Height))
# %>% para aplicar una operacion sobre el df
dfPru <- df_final
dfPru %>%
select(Weight, Height) %>%
mutate(
IMC = Weight / (Height)^2
)
vis_dat(df_final)
str(dfPru)
mutate(dfPru, ICM= Weight/(Height*Height))
str(dfPru)
dfPru <- mutate(dfPru, ICM= Weight/(Height*Height))
str(dfPru)
# FEATURE ENGINEERING
df_OSA_C <- mutate(df_OSA_C, BMI = Weight/(Height)^2)
df_OSA_C=df_OSA
Input_file <- "OSA_DB_UPM.xlsx"
Data_Directory <- "/Users/beatrizesteban/OneDrive - Universidad Politeﾌ…nica de Madrid/Segundo MUIT/PRDL&MLLB/OSA/DATA/"
library(readxl)
df_OSA <- read_excel(paste(Data_Directory, Input_file, sep = ""))
df_OSA = as.data.frame(df_OSA)
names(df_OSA)
dim(df_OSA)
df_OSA_C=df_OSA
#df_OSA_C$Gender = as.numeric(df_OSA_C$Gender)
#patient no lo usa para nada
M <- cor(subset(df_OSA_C))
#df_OSA_C$Gender = as.numeric(df_OSA_C$Gender)
#patient no lo usa para nada
M <- cor(subset(df_OSA_C, select = -Patient))
# FEATURE ENGINEERING
df_OSA_C <- mutate(df_OSA_C, BMI = Weight/(Height)^2)
str(df_OSA_C)
M <- cor(subset(df_OSA_C, select = -Patient))
lm.fit= lm(BMI ~ IAH)
M <- cor(subset(df_OSA_C, select = -Patient))
corrplot(M, method="number")
# FIRST
# install corrplot and then load it
library(corrplot)
M <- cor(subset(df_OSA_C, select = -Patient))
corrplot(M, method="number")
corrplot(M, method="circle", col=greenDegradado, tl.col = "black")
color <- brewer.pal(7, "Set3")
greenDegradado <- brewer.pal(7, "Greens")
corrplot(M, method="circle", col=greenDegradado, tl.col = "black")
lm.fit= lm(BMI ~ IAH)
attach(df_OSA_C)
# FEATURE ENGINEERING
df_OSA_C <- mutate(df_OSA_C, BMI = Weight/(Height)^2)
str(df_OSA_C)
attach(df_OSA_C)
attach(df_OSA_C)
Input_file <- "OSA_DB_UPM.xlsx"
Data_Directory <- "/Users/beatrizesteban/OneDrive - Universidad Politeﾌ…nica de Madrid/Segundo MUIT/PRDL&MLLB/OSA/DATA/"
library(readxl)
df_OSA <- read_excel(paste(Data_Directory, Input_file, sep = ""))
df_OSA = as.data.frame(df_OSA)
names(df_OSA)
dim(df_OSA)
color <- brewer.pal(7, "Set3")
greenDegradado <- brewer.pal(7, "Greens")
df_OSA_C=df_OSA
View(df_OSA)
# FEATURE ENGINEERING
df_OSA_C <- mutate(df_OSA_C, BMI = Weight/(Height)^2)
str(df_OSA_C)
View(df_OSA_C)
attach(df_OSA_C)
M <- cor(subset(df_OSA_C, select = -Patient))
corrplot(M, method="number")
corrplot(M, method="circle", col=greenDegradado, tl.col = "black")
lm.fit= lm(BMI ~ IAH)
plot(IAH, BMI)
abline(lm.fit)
summary(lm.fit)
# FEATURE ENGINEERING
df_OSA_C <- mutate(df_OSA_C, BMI = (Weight/(Height)^2)*100)
str(df_OSA_C)
attach(df_OSA_C)
M <- cor(subset(df_OSA_C, select = -Patient))
corrplot(M, method="number")
corrplot(M, method="circle", col=greenDegradado, tl.col = "black")
lm.fit= lm(BMI ~ IAH)
plot(IAH, BMI)
abline(lm.fit)
summary(lm.fit)
# FEATURE ENGINEERING
df_OSA_C <- mutate(df_OSA_C, BMI = ((Weight)/(Height)^2))
str(df_OSA_C)
# FEATURE ENGINEERING
df_OSA_C <- mutate(df_OSA_C, BMI = ((Weight)/(Height*10^2)^2))
str(df_OSA_C)
# FEATURE ENGINEERING
df_OSA_C <- mutate(df_OSA_C, BMI = ((Weight)/(Height*10^-2)^2))
str(df_OSA_C)
attach(df_OSA_C)
M <- cor(subset(df_OSA_C, select = -Patient))
corrplot(M, method="number")
corrplot(M, method="circle", col=greenDegradado, tl.col = "black")
lm.fit= lm(BMI ~ IAH)
plot(IAH, BMI)
abline(lm.fit)
summary(lm.fit)
plot(BMI, IAH)
abline(lm.fit)
### see distributions (histogram) profe en clase
hist(df_OSA$IAH) #poison distribution, why? to measure nﾂｺ of time somt happens but in regression we supose that distributions are gaussian
#solution--> coger el log (+1 por asegurar)
hist(log(df_OSA$IAH+1)) #but why IAH is pisson distribution=? these type of question for data anaalysis
hist(df_OSA$Weight)
#solution--> coger el log (+1 por asegurar)
hist(log(df_OSA$IAH+1), xlab = IAH) #but why IAH is pisson distribution=? these type of question for data anaalysis
#solution--> coger el log (+1 por asegurar)
hist(log(df_OSA$IAH+1), xlab = "IAH") #but why IAH is pisson distribution=? these type of question for data anaalysis
#solution--> coger el log (+1 por asegurar)
hist(log(df_OSA$IAH+1), main= NULL, xlab = "IAH") #but why IAH is pisson distribution=? these type of question for data anaalysis
#solution--> coger el log (+1 por asegurar)
hist(log(df_OSA$IAH+1), main= NULL, xlab = "IAH", col= greenDegradado) #but why IAH is pisson distribution=? these type of question for data anaalysis
## Describe the Database
color <- brewer.pal(7, "Set3")
greenDegradado <- brewer.pal(7, "Greens")
#solution--> coger el log (+1 por asegurar)
hist(log(df_OSA$IAH+1), main= NULL, xlab = "IAH", col= color) #but why IAH is pisson distribution=? these type of question for data anaalysis
lm.fit=lm(IAH~Weight+Height+Cervical+Age+Gender)
# think what happends qehn adding a categorical variable (gender) --> algo mal
# ver pptx ej pg 64
#plot(IAH~Weight+Height+Cervical+Age+Gender)
summary(lm.fit)
# make predictions#
predIAH <- predict(lm.fit, df_OSA[c('Weight', 'Height', 'Cervical', 'Age', 'Gender')])
#--> captura
plot(predIAH)
#--> captura
plot(IAH, predIAH)
#--> captura
pred <- plot(IAH, predIAH)
abline(pred)
abline(plot(IAH, predIAH))
# make predictions
#predIAH <- predict(lm.fit, df_OSA[c('Weight', 'Height', 'Cervical', 'Age', 'Gender')])
predIAH <- predict(lm.fit, df_OSA_C[c('Weight', 'Height', 'Cervical', 'Age', 'Gender', 'BMI')])
plot(IAH, predIAH)
lm.fit=lm(IAH~Weight+Height+Cervical+Age+Gender+BMI)
# think what happends qehn adding a categorical variable (gender) --> algo mal
# ver pptx ej pg 64
plot(IAH~Weight+Height+Cervical+Age+Gender+BMI)
# think what happends qehn adding a categorical variable (gender) --> algo mal
# ver pptx ej pg 64
#plot(IAH~Weight+Height+Cervical+Age+Gender+BMI)
summary(lm.fit)
# make predictions
#predIAH <- predict(lm.fit, df_OSA[c('Weight', 'Height', 'Cervical', 'Age', 'Gender')])
predIAH <- predict(lm.fit, df_OSA_C[c('Weight', 'Height', 'Cervical', 'Age', 'Gender', 'BMI')])
plot(IAH, predIAH)
Input_file <- "OSA_DB_UPM.xlsx"
Data_Directory <- "/Users/beatrizesteban/OneDrive - Universidad Politeﾌ…nica de Madrid/Segundo MUIT/PRDL&MLLB/OSA/DATA/"
library(readxl)
df_OSA <- read_excel(paste(Data_Directory, Input_file, sep = ""))
df_OSA = as.data.frame(df_OSA)
names(df_OSA)
dim(df_OSA)
# COLORS
color <- brewer.pal(7, "Set3")
greenDegradado <- brewer.pal(7, "Greens")
# DISTRIBUTION HISTOGRAM
hist(df_OSA$IAH) #poison distribution, why? to measure nﾂｺ of time somt happens but in regression we supose that distributions are gaussian
#solution--> coger el log (+1 por asegurar)
hist(log(df_OSA$IAH+1), main= NULL, xlab = "IAH", col= color) #but why IAH is pisson distribution=? these type of question for data anaalysis
# See relations between variables
attach(df_OSA)
pairs(~ IAH + Gender + Weight + Height + Cervical + Age)
# FIRST
# install corrplot and then load it
library(corrplot)
df_OSA_C=df_OSA
#df_OSA_C$Gender = as.numeric(df_OSA_C$Gender)
#patient no lo usa para nada
M <- cor(subset(df_OSA_C, select = -Patient))
corrplot(M, method="number")
corrplot(M, method="circle", col=greenDegradado, tl.col = "black")
# SIMPLE Regression
lm.fit= lm(IAH ~ Cervical)
plot(Cervical, IAH)
abline(lm.fit)
summary(lm.fit)
lm.fit= lm(Weight ~ Cervical)
plot(Cervical, Weight)
abline(lm.fit)
summary(lm.fit)
lm.fit= lm(Weight ~ IAH)
plot(IAH, Weight)
abline(lm.fit)
summary(lm.fit)
lm.fit=lm(IAH~Weight+Height+Cervical+Age+Gender)
# think what happends qehn adding a categorical variable (gender) --> algo mal
# ver pptx ej pg 64
#plot(IAH~Weight+Height+Cervical+Age+Gender+BMI)
summary(lm.fit)
# make predictions
predIAH <- predict(lm.fit, df_OSA[c('Weight', 'Height', 'Cervical', 'Age', 'Gender')])
#predIAH <- predict(lm.fit, df_OSA_C[c('Weight', 'Height', 'Cervical', 'Age', 'Gender', 'BMI')])
plot(IAH, predIAH)
# FEATURE ENGINEERING
# Creation of new column
df_OSA_feat <- mutate(df_OSA_C, BMI = ((Weight)/(Height*10^-2)^2))
str(df_OSA_feat)
attach(df_OSA_feat)
M <- cor(subset(df_OSA_feat, select = -Patient))
# SIMPLE regression
lm.fit= lm(BMI ~ IAH)
plot(IAH, BMI)
abline(lm.fit)
summary(lm.fit)
lm.fit=lm(IAH~Weight+Height+Cervical+Age+Gender+BMI)
# think what happends qehn adding a categorical variable (gender) --> algo mal
# ver pptx ej pg 64
#plot(IAH~Weight+Height+Cervical+Age+Gender+BMI)
summary(lm.fit)
# FEATURE ENGINEERING
# Delete smoker and snorer
df_OSA_feat1 <- subset(df_OSA_C, select = - Smoker, -Snorer)
# FEATURE ENGINEERING
# Delete smoker and snorer
df_OSA_feat1 <- select(df_OSA_C,- Smoker, -Snorer)
str(df_OSA_feat1)
str(df_OSA_C)
# FEATURE ENGINEERING
# Delete smoker and snorer
df_OSA_feat1 <- select(df_OSA_C,- Smoker, -Snorer)
str(df_OSA_feat1)
# Creation of new column
df_OSA_feat2 <- mutate(df_OSA_C, BMI = ((Weight)/(Height*10^-2)^2))
str(df_OSA_feat2)
attach(df_OSA_feat2)
M <- cor(subset(df_OSA_feat2, select = -Patient))
# SIMPLE regression
lm.fit= lm(BMI ~ IAH)
plot(IAH, BMI)
abline(lm.fit)
summary(lm.fit)
pairs(~ IAH + Gender + Weight + Height + Cervical + Age + Smoker + Snorer)
plot(predict(lm.fit),residuals(lm.fit),xlab='Fitted values',ylab='Residuals',main='Residual Plot for Advertisement')
plot(fit)
plot(predict(lm.fit),residuals(lm.fit),xlab='Fitted values',ylab='Residuals',main='Residual Plot for Advertisement')
abline()
lm.fit=lm(IAH~Weight+Height+Cervical+Age+Gender+BMI)
# think what happends qehn adding a categorical variable (gender) --> algo mal
# ver pptx ej pg 64
#plot(IAH~Weight+Height+Cervical+Age+Gender+BMI)
summary(lm.fit)
# make predictions
predIAH <- predict(lm.fit, df_OSA_C[c('Weight', 'Height', 'Cervical', 'Age', 'Gender', 'BMI')])
attach(df_OSA_feat2)
M <- cor(subset(df_OSA_feat2, select = -Patient))
# SIMPLE regression
lm.fit= lm(BMI ~ IAH)
plot(IAH, BMI)
abline(lm.fit)
summary(lm.fit)
lm.fit=lm(IAH~Weight+Height+Cervical+Age+Gender+BMI)
# think what happends qehn adding a categorical variable (gender) --> algo mal
# ver pptx ej pg 64
#plot(IAH~Weight+Height+Cervical+Age+Gender+BMI)
summary(lm.fit)
# make predictions
predIAH <- predict(lm.fit, df_OSA_feat2[c('Weight', 'Height', 'Cervical', 'Age', 'Gender', 'BMI')])
plot(IAH, predIAH)
plot(predict(lm.fit),residuals(lm.fit),xlab='Fitted values',ylab='Residuals',main='Residual Plot for Advertisement')
plot(predict(lm.fit),residuals(lm.fit),xlab='Fitted values',ylab='Residuals',main='Residual Plot for IAH')
abline(lm.fit)
abline(plot(predict(lm.fit),residuals(lm.fit),xlab='Fitted values',ylab='Residuals',main='Residual Plot for IAH'))
plot(IAH, predIAH, xlab = 'Predicted IAH')
plot(IAH, predIAH, ylab = 'Predicted IAH')
plot(predict(lm.fit),residuals(lm.fit),xlab='Fitted values',ylab='Residuals')
