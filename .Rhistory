Input_file <- "Info_BDApnea_QuironMalaga.xlsx"
Output_file <- "OSA_DB_UPM.xlsx"
Data_Directory <- "/Users/beatrizesteban/OneDrive - Universidad Politécnica de Madrid/Segundo MUIT/PRDL&MLLB/OSA/DATA/"
# paste --> concatenation of to strings
df_tmp <- read_excel(paste(Data_Directory, Input_file, sep = ""))
typeof(df_tmp)
is.data.frame(df_tmp)
### NOTE: ##############################################
# df_tmp is NOT only a data frame!
# use as.data.frame to avoid later problems
class(df_tmp)
df_tmp = as.data.frame(df_tmp)
class(df_tmp)
df_tmp1 <- select(df_tmp, Patient, Gender, IAH, Peso, Talla, Edad, PerCervical, Fumador, Roncador, Enfermedades)
df_tmp1 <- df_tmp1 %>% rename(Weight = Peso,
Height = Talla,
Age = Edad,
Cervical = PerCervical,
Smoker = Fumador,
Snorer = Roncador,
Illness = Enfermedades)
df_tmp1 %>% group_by(Illness)
df_tmp1 %>% group_by(Illness) %>% count(Illness)
df_tmp1 %>% group_by(Illness) %>% count(Illness,sort = Illness)
df_tmp1 %>% group_by(Illness) %>% count(Illness,sort = max())
df_tmp1 %>% group_by(Illness) %>% count(Illness,sort = max(Illness))
df_tmp1 %>% group_by(Illness) %>% count(Illness,sort = max)
df_tmp1 %>% group_by(Illness) %>% count(Illness,sort = max())
rm(list=ls())
Input_file <- "OSA_extreme_male.xlsx"
Data_Directory <- "D:\\OSA_CaseStudy\\DATA\\"
library(readxl)
df_OSA_male <- read_excel(paste(Data_Directory, Input_file, sep = ""))
summary(df_OSA_male)
Input_file <- "OSA_extreme_male.xlsx"
Data_Directory <- "/Users/beatrizesteban/OneDrive - Universidad Politécnica de Madrid/Segundo MUIT/PRDL&MLLB/OSA/DATA/
# Using readxl package to read an Excel file
# Install the readxl package is nor already installed
library(readxl)
df_OSA_male <- read_excel(paste(Data_Directory, Input_file, sep = ""))
summary(df_OSA_male)
# Define OSA column as a factor for being used be
# classification models
df_OSA_male$OSA = factor(df_OSA_male$OSA)
# Using contrasts you can see how the levels of
# the factors will be coded when fitting the model
contrasts(df_OSA_male$OSA)
##################################################
#### Let's start trying LOGISTIC REGRESSION #######
glm.fit=glm(OSA~BMI+Age+Cervical,data=df_OSA_male,
family=binomial)
# ... you can explore results following the ideas
#     in the text book
summary(glm.fit)
coef(glm.fit)
summary(glm.fit)$coef
#####################################################
#
#    CLASSIFICATION ACCURACY
#
# If no data set is supplied to the predict() function,
# then the probabilities are computed for the training
# data that was used to fit the logistic regression model.
# Here we have printed only the first ten probabilities.
glm.probs=predict(glm.fit,type="response")
glm.probs[1:10]
contrasts(df_OSA_male$OSA)
df_OSA_male$IAH[1:10]
#######################################################
#
#   - Use the Probabilities to perform classification
#   - Obtaing a CONFUSSION MATRIX
# The first command creates a vector of 278 Healthy elements.
# The second line transforms to Up all of the elements
# for which the predicted probability of Healthy exceeds 0.5.
### !!! NOTE that this depends on the result of the
###     assignment : see contrasts
glm.pred=rep("Healthy",278)
glm.pred[glm.probs>.5]="Severe"
# table() can be used to obtain a CONFUSSION MATRIX
table(glm.pred,df_OSA_male$OSA)
### UNDERSTAND THE DIFFERENT WAYS TO EXPLORE
### THE CONFUSION MATRIX
sum(df_OSA_male$OSA=='Healthy')
sum(df_OSA_male$OSA=='Severe')
# Correct Prediction
(97+103)/278
mean(glm.pred==df_OSA_male$OSA)
##### SOME IMPORTANT QUESTIONS:
#   - Can you understand the different types of errors?
#
#   - Could you "change" the results?
#     (think on the decission threshold, ROC, AUC curves, etc)
##### AS AN APPROACH TO ROC, DET COURVES ########
#####
#####  you can plot the histograms of model probabilities grouped
#####  by class
##  A simple way to do this is adding a new column to the
##  df_OSA_male with these probabilities
df_OSA_male$Probs <- glm.probs
############################################
#### As we already used in PrepareOSA R script
#### you can use ggplot2 for plotting
#### histograms of a dataframe by group
library(ggplot2)
ggplot(df_OSA_male, aes(x = Probs)) +
geom_histogram(aes(color = OSA), fill = "white",
position = "identity", bins = 30, alpha = 0.1) +
scale_color_manual(values = c("#00AFBB", "#E7B800")) +
rm(list=ls())
Input_file <- "OSA_extreme_male.xlsx"
Data_Directory <- "/Users/beatrizesteban/OneDrive - Universidad Politécnica de Madrid/Segundo MUIT/PRDL&MLLB/OSA/DATA/"
library(readxl)
df_OSA_male <- read_excel(paste(Data_Directory, Input_file, sep = ""))
summary(df_OSA_male)
# Define OSA column as a factor for being used be
# classification models
df_OSA_male$OSA = factor(df_OSA_male$OSA)
cor(df_OSA_male[,3:7])
# for examle a visualization
library(corrplot)
correlations = cor(df_OSA_male[,3:7])
corrplot(correlations, method="number")
View(df_OSA_male)
cor(df_OSA_male[,3:8]) #makes correlation from column 3 to 8
# for examle a visualization
library(corrplot)
correlations = cor(df_OSA_male[,3:7])
correlations = cor(df_OSA_male[,3:8])
corrplot(correlations, method="number")
correlations = cor(df_OSA_male[,3:10])
corrplot(correlations, method="number")
corrplot(correlations, method="circle")
library("RColorBrewer") #For colors
color <- brewer.pal(7, "Set3")
corrplot(correlations, method="number", col = color)
corrplot(correlations, method="circle", col = color)
corrplot(correlations, method="circle", col = greenDegradado)
corrplot(correlations, method="circle", col = greenDegradado)
greenDegradado <- brewer.pal(7, "Greens")
corrplot(correlations, method="circle", col = greenDegradado)
corrplot(correlations, method="circle", col = greenDegradado, tl.col = "black")
# set the plotting area into a 1*2 array
par(mfrow=c(1,2))
hist(subset(df_OSA_male, OSA=="Healthy")$IAH)
hist(subset(df_OSA_male, OSA=="Healthy")$IAH, col = color)
hist(subset(df_OSA_male, OSA=="Severe")$IAH, color)
hist(subset(df_OSA_male, OSA=="Healthy")$IAH, col = color)
hist(subset(df_OSA_male, OSA=="Severe")$IAH, color)
hist(subset(df_OSA_male, OSA=="Severe")$IAH, color)
hist(subset(df_OSA_male, OSA=="Severe")$IAH, col = color)
hist(df_OSA_male$IAH[df_OSA_male$OSA=="Healthy"])
hist(subset(df_OSA_male, OSA=="Healthy")$IAH, main= 'Healthy male histogram', xlab = "IAH", col = color)
#hist(df_OSA_male$IAH[df_OSA_male$OSA=="Healthy"]) # es lo mismo que el anterior
hist(subset(df_OSA_male, OSA=="Severe")$IAH, main= 'Ill (severe OSA) male histogram', xlab = "IAH", col = color)
hist(subset(df_OSA_male, OSA=="Healthy")$IAH, main= 'Healthy (low OSA) male histogram', xlab = "IAH", col = color)
hist(subset(df_OSA_male, OSA=="Healthy")$IAH, main= 'Healthy (low OSA) male histogram', xlab = "IAH", col = color)
#hist(df_OSA_male$IAH[df_OSA_male$OSA=="Healthy"]) # es lo mismo que el anterior
hist(subset(df_OSA_male, OSA=="Severe")$IAH, main= 'Ill (severe OSA) male histogram', xlab = "IAH", col = color)
# set the plotting area into a 1*2 array
par(mfrow=c(1,2))
hist(subset(df_OSA_male, OSA=="Healthy")$Cervical, main= 'Healthy (low OSA) male histogram', xlab = "Cervical", col = color)
hist(subset(df_OSA_male, OSA=="Severe")$Cervical, main= 'Ill (severe OSA) male histogram', xlab = "Cervical", col = color)
par(mfrow=c(1,2))
hist(subset(df_OSA_male, OSA=="Healthy")$Weight, main= 'Healthy (low OSA) male histogram', xlab = "Weight", col = color)
hist(subset(df_OSA_male, OSA=="Severe")$Weigth, main= 'Ill (severe OSA) male histogram', xlab = "Weight", col = color)
hist(subset(df_OSA_male, OSA=="Severe")$Weight, main= 'Ill (severe OSA) male histogram', xlab = "Weight", col = color)
library(lattice)
# Each group in a separate mini plot
xyplot(BMI ~ Age | OSA, data = df_OSA_male)
xyplot(BMI ~ Age ,
groups =  OSA, data = df_OSA_male,
auto.key = list(corner = c(1, 1), cex = 0.7))
library(ggplot2)
ggplot(df_OSA_male, aes(x = BMI)) +
geom_histogram(aes(color = OSA), fill = "white",
position = "identity", bins = 30, alpha = 0.1) +
scale_color_manual(values = c("#00AF00", "#E7B800")) +
scale_fill_manual(values = c("#00AF00", "#E7B800"))
p1 <- ggplot(df_OSA_male, aes(x = BMI)) +
geom_histogram(aes(color = OSA), fill = "white",
position = "identity", bins = 30, alpha = 0.1) +
scale_color_manual(values = c("#00AF00", "#E7B800")) +
scale_fill_manual(values = c("#00AF00", "#E7B800"))
p2 <- ggplot(df_OSA_male, aes(x = Height)) +
geom_histogram(aes(color = OSA), fill = "white",
position = "identity", bins = 30, alpha = 0.1) +
scale_color_manual(values = c("#00AF00", "#E7B800")) +
scale_fill_manual(values = c("#00AF00", "#E7B800"))
library(gridExtra)
ggplot(df_OSA_male, aes(x = BMI)) +
geom_histogram(aes(color = OSA), fill = "white",
position = "identity", bins = 30, alpha = 0.1) +
scale_color_manual(values = c("#00AF00", "#E7B800")) +
scale_fill_manual(values = c("#00AF00", "#E7B800"))
p1 <- ggplot(df_OSA_male, aes(x = BMI)) +
geom_histogram(aes(color = OSA), fill = "white",
position = "identity", bins = 30, alpha = 0.1) +
scale_color_manual(values = c("#00AF00", "#E7B800")) +
scale_fill_manual(values = c("#00AF00", "#E7B800"))
p2 <- ggplot(df_OSA_male, aes(x = Height)) +
geom_histogram(aes(color = OSA), fill = "white",
position = "identity", bins = 30, alpha = 0.1) +
scale_color_manual(values = c("#00AF00", "#E7B800")) +
scale_fill_manual(values = c("#00AF00", "#E7B800"))
library(gridExtra)
grid.arrange(p1, p2, ncol = 2)
par(mfrow=c(2,2))
hist(subset(df_OSA_male, OSA=="Healthy")$IAH, main= 'Healthy (low OSA) male histogram', xlab = "IAH", col = color)
#hist(df_OSA_male$IAH[df_OSA_male$OSA=="Healthy"]) # es lo mismo que el anterior
hist(subset(df_OSA_male, OSA=="Severe")$IAH, main= 'Ill (severe OSA) male histogram', xlab = "IAH", col = color)
hist(subset(df_OSA_male, OSA=="Healthy")$Cervical, main= 'Healthy (low OSA) male histogram', xlab = "Cervical", col = color)
hist(subset(df_OSA_male, OSA=="Severe")$Cervical, main= 'Ill (severe OSA) male histogram', xlab = "Cervical", col = color)
par(mfrow=c(1,1))
ggplot(df_OSA_male, aes(x = IAH)) +
geom_histogram(aes(color = OSA), fill = "white",
position = "identity", bins = 30, alpha = 0.1) +
scale_color_manual(values = c("#00AF00", "#E7B800")) +
scale_fill_manual(values = c("#00AF00", "#E7B800"))
ggplot(df_OSA_male, aes(x = Weight)) +
geom_histogram(aes(color = OSA), fill = "white",
position = "identity", bins = 30, alpha = 0.1) +
scale_color_manual(values = c("#00AF00", "#E7B800")) +
scale_fill_manual(values = c("#00AF00", "#E7B800"))
ggplot(df_OSA_male, aes(x = Cervical)) +
geom_histogram(aes(color = OSA), fill = "white",
position = "identity", bins = 30, alpha = 0.1) +
scale_color_manual(values = c("#00AF00", "#E7B800")) +
scale_fill_manual(values = c("#00AF00", "#E7B800"))
p1 <- ggplot(df_OSA_male, aes(x = BMI)) +
geom_histogram(aes(color = OSA), fill = "white",
position = "identity", bins = 30, alpha = 0.1) +
scale_color_manual(values = c("#00AF00", "#E7B800")) +
scale_fill_manual(values = c("#00AF00", "#E7B800"))
p2 <- ggplot(df_OSA_male, aes(x = Weight)) +
geom_histogram(aes(color = OSA), fill = "white",
position = "identity", bins = 30, alpha = 0.1) +
scale_color_manual(values = c("#00AF00", "#E7B800")) +
scale_fill_manual(values = c("#00AF00", "#E7B800"))
library(gridExtra)
grid.arrange(p1, p2, ncol = 2)
grid.arrange(p3, p4, ncol = 2)
(
p4 <- ggplot(df_OSA_male, aes(x = Cervical)) +
geom_histogram(aes(color = OSA), fill = "white",
position = "identity", bins = 30, alpha = 0.1) +
scale_color_manual(values = c("#00AF00", "#E7B800")) +
scale_fill_manual(values = c("#00AF00", "#E7B800"))
grid.arrange(p3, p4, ncol = 2)
p3 <- ggplot(df_OSA_male, aes(x = IAH)) +
geom_histogram(aes(color = OSA), fill = "white",
position = "identity", bins = 30, alpha = 0.1) +
scale_color_manual(values = c("#00AF00", "#E7B800")) +
scale_fill_manual(values = c("#00AF00", "#E7B800"))
p4 <- ggplot(df_OSA_male, aes(x = Cervical)) +
geom_histogram(aes(color = OSA), fill = "white",
position = "identity", bins = 30, alpha = 0.1) +
scale_color_manual(values = c("#00AF00", "#E7B800")) +
scale_fill_manual(values = c("#00AF00", "#E7B800"))
grid.arrange(p3, p4, ncol = 2)
par(mfrow=c(1,2))
attach(df_OSA_male)
boxplot(BMI ~ OSA)
boxplot(Height ~ OSA)
kruskal.test(BMI ~ OSA, data = df_OSA_male)
kruskal.test(Height ~ OSA, data = df_OSA_male)
kruskal.test(Cervical ~ OSA, data = df_OSA_male)
kruskal.test(Height + Weight ~ OSA, data = df_OSA_male)
boxplot(Cervical ~ OSA)
rm(list=ls())
Input_file <- "OSA_extreme_male.xlsx"
Data_Directory <- "/Users/beatrizesteban/OneDrive - Universidad Politécnica de Madrid/Segundo MUIT/PRDL&MLLB/OSA/DATA/"
library(readxl)
df_OSA_male <- read_excel(paste(Data_Directory, Input_file, sep = ""))
summary(df_OSA_male)
# Define OSA column as a factor for being used be
# classification models
df_OSA_male$OSA = factor(df_OSA_male$OSA)
# Using contrasts you can see how the levels of
# the factors will be coded when fitting the model
contrasts(df_OSA_male$OSA)
glm.fit=glm(OSA~BMI+Age+Cervical,data=df_OSA_male,
family=binomial)
summary(glm.fit)
coef(glm.fit)
summary(glm.fit)$coef
rm(list=ls())
Input_file <- "OSA_DB_UPM.xlsx"
Output_file <- "OSA_extreme_male.xlsx"
Data_Directory <- "/Users/beatrizesteban/OneDrive - Universidad Politécnica de Madrid/Segundo MUIT/PRDL&MLLB/OSA/DATA/"
library(readxl)
df_OSA <- read_excel(paste(Data_Directory, Input_file, sep = ""))
df_OSA = as.data.frame(df_OSA)
names(df_OSA)
dim(df_OSA)
## We will begin considering male subjets
### Male population
df_OSA_male=subset(df_OSA, Gender==1)
# We will use dplyr library (mutate operator)
library(dplyr)
df_OSA_male <- df_OSA_male %>%
mutate(OSA = ifelse(IAH <= 10, "Healthy",
ifelse(IAH>=30, "Severe", "Mild")))
df_OSA_male <- df_OSA_male %>% filter(OSA != "Mild")
df_OSA_male$OSA = factor(df_OSA_male$OSA)
# Add BMI column
df_OSA_male$BMI <-
with(df_OSA_male, Weight / (Height/100.0)^2)
summary(df_OSA_male)
df_OSA_male %>% group_by(OSA) %>% summarise(Ave_IAH = mean(IAH))
library(writexl)
write_xlsx(df_OSA_male,
paste(Data_Directory, Output_file, sep = ""))
rm(list=ls())
Input_file <- "OSA_extreme_male.xlsx"
Data_Directory <- "/Users/beatrizesteban/OneDrive - Universidad Politécnica de Madrid/Segundo MUIT/PRDL&MLLB/OSA/DATA/"
library(readxl)
library("RColorBrewer") #For colors
color <- brewer.pal(7, "Set3")
greenDegradado <- brewer.pal(7, "Greens")
df_OSA_male <- read_excel(paste(Data_Directory, Input_file, sep = ""))
summary(df_OSA_male)
# Define OSA column as a factor for being used be
# classification models
df_OSA_male$OSA = factor(df_OSA_male$OSA)
cor(df_OSA_male[,3:10]) #makes correlation from column 3 to 8
# for examle a visualization
library(corrplot)
correlations = cor(df_OSA_male[,3:10])
corrplot(correlations, method="number")
corrplot(correlations, method="circle", col = greenDegradado, tl.col = "black")
# Mejor hacerlo con ggplot2
par(mfrow=c(1,2))
hist(subset(df_OSA_male, OSA=="Healthy")$IAH, main= 'Healthy (low OSA) male histogram', xlab = "IAH", col = color)
#hist(df_OSA_male$IAH[df_OSA_male$OSA=="Healthy"]) # es lo mismo que el anterior
hist(subset(df_OSA_male, OSA=="Severe")$IAH, main= 'Ill (severe OSA) male histogram', xlab = "IAH", col = color)
# set the plotting area into a 1*2 array
par(mfrow=c(1,2))
hist(subset(df_OSA_male, OSA=="Healthy")$Cervical, main= 'Healthy (low OSA) male histogram', xlab = "Cervical", col = color)
hist(subset(df_OSA_male, OSA=="Severe")$Cervical, main= 'Ill (severe OSA) male histogram', xlab = "Cervical", col = color)
par(mfrow=c(1,2))
hist(subset(df_OSA_male, OSA=="Healthy")$Weight, main= 'Healthy (low OSA) male histogram', xlab = "Weight", col = color)
hist(subset(df_OSA_male, OSA=="Severe")$Weight, main= 'Ill (severe OSA) male histogram', xlab = "Weight", col = color)
library(lattice)
# Each group in a separate mini plot
xyplot(BMI ~ Age | OSA, data = df_OSA_male)
xyplot(BMI ~ Age ,
groups =  OSA, data = df_OSA_male,
auto.key = list(corner = c(1, 1), cex = 0.7))
library(ggplot2)
library(gridExtra) #create a grid of plots (like subplot())
p3 <- ggplot(df_OSA_male, aes(x = IAH)) +
geom_histogram(aes(color = OSA), fill = "white",
position = "identity", bins = 30, alpha = 0.1) +
scale_color_manual(values = c("#00AF00", "#E7B800")) +
scale_fill_manual(values = c("#00AF00", "#E7B800"))
p4 <- ggplot(df_OSA_male, aes(x = Cervical)) +
geom_histogram(aes(color = OSA), fill = "white",
position = "identity", bins = 30, alpha = 0.1) +
scale_color_manual(values = c("#00AF00", "#E7B800")) +
scale_fill_manual(values = c("#00AF00", "#E7B800"))
p1 <- ggplot(df_OSA_male, aes(x = BMI)) +
geom_histogram(aes(color = OSA), fill = "white",
position = "identity", bins = 30, alpha = 0.1) +
scale_color_manual(values = c("#00AF00", "#E7B800")) +
scale_fill_manual(values = c("#00AF00", "#E7B800"))
p2 <- ggplot(df_OSA_male, aes(x = Weight)) +
geom_histogram(aes(color = OSA), fill = "white",
position = "identity", bins = 30, alpha = 0.1) +
scale_color_manual(values = c("#00AF00", "#E7B800")) +
scale_fill_manual(values = c("#00AF00", "#E7B800"))
grid.arrange(p1, p2, ncol = 2)
grid.arrange(p3, p4, ncol = 2)
kruskal.test(BMI ~ OSA, data = df_OSA_male)
kruskal.test(Cervical ~ OSA, data = df_OSA_male)
kruskal.test(Height + Weight ~ OSA, data = df_OSA_male)
# PREDICTIONS
predIAH <- predict(lm.fit, df_OSA_feat2[c('Weight', 'Height', 'Cervical', 'Age', 'Gender', 'BMI')])
# Clear the working space
rm(list=ls())
library(readxl) # Using readxl package to read an Excel file
library(writexl) # write excelfile
library(dplyr) # To work with datasets, basic library
library(tidyr) # easy to clean the daata an dowrk with. Each column is a variable and each row and obs
library(visdat) #visualize
library("RColorBrewer") #For colors
library(naniar) # for missing data
Input_file <- "Info_BDApnea_QuironMalaga.xlsx"
Output_file <- "OSA_DB_final.xlsx"
Data_Directory <- "/Users/beatrizesteban/OneDrive - Universidad Politécnica de Madrid/Segundo MUIT/PRDL&MLLB/OSA/DATA/"
# paste --> concatenation of to strings
df_tmp <- read_excel(paste(Data_Directory, Input_file, sep = ""))
typeof(df_tmp)
is.data.frame(df_tmp)
### NOTE: ##############################################
# df_tmp is NOT only a data frame!
# use as.data.frame to avoid later problems
class(df_tmp)
df_tmp = as.data.frame(df_tmp)
class(df_tmp)
df_tmp1 <- select(df_tmp, Patient, Gender, IAH, Peso, Talla, Edad, PerCervical, Fumador, Roncador, Enfermedades)
df_tmp1 <- df_tmp1 %>% rename(Weight = Peso,
Height = Talla,
Age = Edad,
Cervical = PerCervical,
Smoker = Fumador,
Snorer = Roncador,
Illness = Enfermedades)
# Transformation of illness into si-no
df_tmp1$Illness[which(df_tmp1$Illness != "no")] <- "si"
# Delete Snorer and Smoker
df_tmp1 <- select(df_tmp1, - Smoker, - Snorer)
summarise(df_tmp1)
View(df_tmp1)
str(df_tmp1)
df_tmp1$Gender = factor(df_tmp1$Gender)
df_tmp1$Gender = as.numeric(df_tmp1$Gender)
df_tmp1$Smoker = factor(df_tmp1$Smoker)
df_tmp1$Smoker = as.numeric(df_tmp1$Smoker)
df_tmp1$Illness = factor(df_tmp1$Illness)
df_tmp1$Illness = as.numeric(df_tmp1$Illness)
df_tmp1$Snorer = factor(df_tmp1$Snorer)
df_tmp1$Snorer= as.numeric(df_tmp1$Snorer)
# Numeric conversion
# String values replace with NA
df_tmp1$Weight = as.numeric(df_tmp1$Weight)
# Now change -1 values for NA in all columns (i.e. variables)
df_tmp2 <- replace_with_na_all(df_tmp1,condition = ~.x == -1)
df_final <- df_tmp2 %>% drop_na()
vis_dat(df_final)
str(df_final) #REcompruebo que menos patient y gender es numeric
write_xlsx(df_final,
paste(Data_Directory, Output_file, sep = ""))
str(df_final)
# Add BMI column
df_tmp1$BMI <- with(df_tmp1, Weight / (Height/100.0)^2)
# Now change -1 values for NA in all columns (i.e. variables)
df_tmp2 <- replace_with_na_all(df_tmp1,condition = ~.x == -1)
df_final <- df_tmp2 %>% drop_na()
vis_dat(df_final)
str(df_final) #REcompruebo que menos patient y gender es numeric
write_xlsx(df_final,
paste(Data_Directory, Output_file, sep = ""))
rm(list=ls())
Input_file <- "OSA_DB_UPM.xlsx"
Output_file <- "OSA_class.xlsx"
Output_file_bin <- "OSA_class_bin.xlsx"
Data_Directory <- "/Users/beatrizesteban/OneDrive - Universidad Politécnica de Madrid/Segundo MUIT/PRDL&MLLB/OSA/DATA/"
library(readxl)
df_OSA <- read_excel(paste(Data_Directory, Input_file, sep = ""))
df_OSA = as.data.frame(df_OSA)
names(df_OSA)
dim(df_OSA)
# We will use dplyr library (mutate operator)
library(dplyr)
#3 classes
df_OSA <- df_OSA %>%
mutate(OSA = ifelse(IAH <= 10, "Healthy",
ifelse(IAH>=30, "Severe", "Mild")))
# 2 clasess
df_OSA_bin <- df_OSA %>% filter(OSA != "Mild")
df_OSA$OSA = factor(df_OSA$OSA)
df_OSA_bin$OSA = factor(df_OSA_bin$OSA)
# Add BMI column
df_OSA$BMI <-
with(df_OSA, Weight / (Height/100.0)^2)
df_OSA_bin$BMI <-
with(df_OSA_bin, Weight / (Height/100.0)^2)
summary(df_OSA_bin)
summary(df_OSA)
library(writexl)
#guardo el de 3 clases
write_xlsx(df_OSA,
paste(Data_Directory, Output_file, sep = ""))
#guardo el de 2 clases
write_xlsx(df_OSA,
paste(Data_Directory, Output_file_bin, sep = ""))
rm(list=ls())
Input_file <- "OSA_DB_UPM.xlsx"
Output_file <- "OSA_class.xlsx"
Output_file_bin <- "OSA_class_bin.xlsx"
Data_Directory <- "/Users/beatrizesteban/OneDrive - Universidad Politécnica de Madrid/Segundo MUIT/PRDL&MLLB/OSA/DATA/"
library(readxl)
df_OSA <- read_excel(paste(Data_Directory, Input_file, sep = ""))
df_OSA = as.data.frame(df_OSA)
names(df_OSA)
dim(df_OSA)
# We will use dplyr library (mutate operator)
library(dplyr)
#3 classes
df_OSA <- df_OSA %>%
mutate(OSA = ifelse(IAH <= 10, "Healthy",
ifelse(IAH>=30, "Severe", "Mild")))
# 2 clasess
df_OSA_bin <- df_OSA %>% filter(OSA != "Mild")
df_OSA$OSA = factor(df_OSA$OSA)
df_OSA_bin$OSA = factor(df_OSA_bin$OSA)
# Add BMI column
df_OSA$BMI <-
with(df_OSA, Weight / (Height/100.0)^2)
df_OSA_bin$BMI <-
with(df_OSA_bin, Weight / (Height/100.0)^2)
summary(df_OSA_bin)
summary(df_OSA)
library(writexl)
#guardo el de 3 clases
write_xlsx(df_OSA,
paste(Data_Directory, Output_file, sep = ""))
#guardo el de 2 clases
write_xlsx(df_OSA_bin,
paste(Data_Directory, Output_file_bin, sep = ""))
View(df_OSA_bin)
